{const len=function(obj=null){return obj.length};const range=function(start=null,stop=null,step=1){const result=[];{if((stop===null)){stop=start;start=0}};{if((step>0)){while((start<stop)){result.push(start);(start+=step)}}else{while((start>stop)){result.push(start);(start+=step)}}};return result};const any=function(obj=null){for(i of obj){{if(i){return true}}}return false};const min=function(...args){return Math.min(...args)};const max=function(...args){return Math.max(...args)};(()=>{const pointInScreen=function(point=null,w=null,h=null){return(((0<=point[0])&&(point[0]<=w))&&((0<=point[1])&&(point[1]<=h)))};const is_intersect=function(line_1=null,line_2=null){return(!((max(line_1[0][0],line_1[1][0])<min(line_2[0][0],line_2[1][0]))||(max(line_2[0][0],line_2[1][0])<min(line_1[0][0],line_1[1][0]))||(max(line_1[0][1],line_1[1][1])<min(line_2[0][1],line_2[1][1]))||(max(line_2[0][1],line_2[1][1])<min(line_1[0][1],line_1[1][1]))))};const batch_is_intersect=function(lines_group_1=null,lines_group_2=null){const res=[];for(i of lines_group_1){for(j of lines_group_2){res.push(is_intersect(i,j))}}return res};const pointInPolygon=function(ploygon=null,point=null){const n=len(ploygon);let j=(n-1);let res=false;for(i of range(n)){{if((((ploygon[i][1]>point[1])!=(ploygon[j][1]>point[1]))&&(point[0]<((((ploygon[j][0]-ploygon[i][0])*(point[1]-ploygon[i][1]))/(ploygon[j][1]-ploygon[i][1]))+ploygon[i][0])))){res=(!res)}};j=i}return res};const getScreenRect=function(w=null,h=null){return[[[0,0],[w,0]],[[0,0],[0,h]],[[w,0],[w,h]],[[0,h],[w,h]]]};const getScreenPoints=function(w=null,h=null){return[[0,0],[w,0],[w,h],[0,h]]};const polygon2lines=function(p=null){const getval=(o,i)=>i>=0?o[i]:o[len(o)+i];return function(master_iter=null){const listcomp_temparr=[];for(i of master_iter){listcomp_temparr.push([getval(p,i),getval(p,(i+1))])}return listcomp_temparr}(range((-1),(len(p)-1)))};const polygonIntersect=function(p1=null,p2=null){return(any(batch_is_intersect(polygon2lines(p1),polygon2lines(p2)))||any(function(master_iter=null){const listcomp_temparr=[];for(i of master_iter){listcomp_temparr.push(pointInPolygon(p1,i))}return listcomp_temparr}(p2))||any(function(master_iter=null){const listcomp_temparr=[];for(i of master_iter){listcomp_temparr.push(pointInPolygon(p2,i))}return listcomp_temparr}(p1)))};const linesInScreen=function(w=null,h=null,lines=null){return(any(batch_is_intersect(lines,getScreenRect(w,h)))||any(function(master_iter=null){const listcomp_temparr=[];for(i of master_iter){for(j of i){listcomp_temparr.push(pointInScreen(j,w,h))}}return listcomp_temparr}(lines)))};const polygonInScreen=function(w=null,h=null,polygon=null){return polygonIntersect(getScreenPoints(w,h),polygon)};window.py_light_utils_exports={'pointInScreen':pointInScreen,'is_intersect':is_intersect,'batch_is_intersect':batch_is_intersect,'pointInPolygon':pointInPolygon,'getScreenRect':getScreenRect,'getScreenPoints':getScreenPoints,'polygon2lines':polygon2lines,'polygonIntersect':polygonIntersect,'linesInScreen':linesInScreen,'polygonInScreen':polygonInScreen}})()}